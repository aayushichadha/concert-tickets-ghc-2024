version: '3'
services:
  postgres:
    build:
      context: ./database
    image: postgres:latest
    container_name: postgres-container
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data_volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U user"]
    #   interval: 10s      # Check every 10 seconds
    #   timeout: 5s       # Timeout after 5 seconds
    #   retries: 5        # Retry 5 times before failing

  elasticsearch:
    image: elasticsearch:8.7.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    # volumes:
    #   - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - mynetwork

  kibana:
    image: kibana:8.7.0
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - mynetwork

  fluentd:
    image: fluent/fluentd:v1.14-1
    # platform: linux/amd64  # Force the usage of amd64 image
    # build:
    #   context: ./fluentd
    #   dockerfile: Dockerfile
    container_name: fluentd
    volumes:
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
      - /var/log:/var/log
    depends_on:
      - elasticsearch
    ports:
      - "24224:24224"  # Port for Fluentd HTTP input plugin
    networks:
      - mynetwork
    # healthcheck:
    #   test: ["CMD", "fluentd", "-c", "/fluentd/etc/fluent.conf", "-q"]
    #   interval: 10s
    #   retries: 5

  ticket-registry-app:
    build:
      context: ./ticket-registry  # Set the build context to the 'ticket-registry' directory
      dockerfile: Dockerfile  # Specify the name of the Dockerfile
    container_name: ticket-registry-app-container
    # logging:
    #   driver: "fluentd"
    #   options:
    #     fluentd-address: fluentd:24224
    #     tag: ticket-registry
    depends_on:
     - postgres
    #  - fluentd
    ports:
      - "8082:8082"
    networks:
      - mynetwork
    # restart: always

  payment-app:
    build:
      context: ./payment  # Set the build context to the 'payment-app' directory
      dockerfile: Dockerfile
    container_name: payment-app-container
    ports:
      - "8081:8081"
    networks:
      - mynetwork

volumes:
  es_data:
  postgres_data_volume:

networks:
  mynetwork:
