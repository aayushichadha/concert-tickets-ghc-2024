version: '3.8'

services:
  postgres:
    build:
      context: ./database
    image: postgres:latest
    container_name: postgres-container
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data_volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    # healthcheck:
    #   test: [ "CMD-SHELL", "pg_isready -U user" ]
    #   interval: 10s
    #   retries: 5

  ticket-registry-app:
    build:
      context: ./ticket-registry
    container_name: ticket-registry-service
    depends_on:
      - postgres
      - jaeger
      # postgres:
      #   condition: service_healthy
      # jaeger:
      #   condition: service_healthy
    ports:
      - "8082:8082"
    networks:
      - mynetwork
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318

  payment-app:
    build:
      context: ./payment
    container_name: payment-service
    ports:
      - "8081:8081"
    networks:
      - mynetwork

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger-container
    ports:
      - "5775:5775"      # for UDP
      - "6831:6831"      # for Thrift over UDP
      - "6832:6832"      # for Thrift over HTTP
      - "5778:5778"      # for the HTTP endpoint
      - "16686:16686"    # for the Jaeger UI
      - "14268:14268"    # for the collector
      - "14250:14250"    # for the gRPC collector
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:16686"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

  book-ticket-app:
    build:
      context: ./book-tickets
    container_name: book-tickets-container
    depends_on:
      - postgres
      - jaeger
      # postgres:
      #   condition: service_healthy
    ports:
      - "8083:8083"
    networks:
      - mynetwork
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318

networks:
  mynetwork:

volumes:
  postgres_data_volume:
